name: Manual Deploy to Windows IIS (FTP + app_offline, self-contained)

on:
  workflow_dispatch: {}

jobs:
  build-and-deploy:
    runs-on: windows-latest
    env:
      CONFIGURATION: Release
      PUBLISH_DIR: publish
      PROJECT_PATH: Presentation/Nop.Web/Nop.Web.csproj

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Verify project path
        shell: pwsh
        run: |
          Write-Host "Looking for: $env:PROJECT_PATH"
          if (-not (Test-Path $env:PROJECT_PATH)) {
            Get-ChildItem -Recurse -Filter *.csproj | ForEach-Object { $_.FullName }
            throw "Project file not found at $env:PROJECT_PATH"
          }

      - name: Restore
        run: dotnet restore

      - name: Publish .NET (self-contained for Windows x64)
        shell: pwsh
        run: |
          dotnet publish "$env:PROJECT_PATH" `
            -c $env:CONFIGURATION `
            -o $env:PUBLISH_DIR `
            -r win-x64 `
            --self-contained true `
            -p:PublishReadyToRun=true `
            -p:IncludeNativeLibrariesForSelfExtract=true

      - name: List publish output
        run: dir $env:PUBLISH_DIR

      - name: Prepare offline file from repo
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path offline | Out-Null
          Copy-Item -Path "_app_offline.htm" -Destination "offline/app_offline.htm" -Force

      - name: Upload app_offline.htm (take site offline)
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server:     ${{ secrets.FTP_SERVER }}
          username:   ${{ secrets.FTP_USERNAME }}
          password:   ${{ secrets.FTP_PASSWORD }}
          server-dir: ${{ secrets.FTP_DIR }}
          local-dir:  ./offline/
          protocol:   ftp
          exclude: |
            **/.git*
            **/.github/**

      - name: Wait IIS to unload app
        run: Start-Sleep -Seconds 8

      - name: Deploy site files (while offline, WITHOUT wwwroot)
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server:     ${{ secrets.FTP_SERVER }}
          username:   ${{ secrets.FTP_USERNAME }}
          password:   ${{ secrets.FTP_PASSWORD }}
          server-dir: ${{ secrets.FTP_DIR }}
          local-dir:  ${{ env.PUBLISH_DIR }}/
          protocol:   ftp
          exclude: |
            **/app_offline.htm
            **/wwwroot/**          # ðŸ‘ˆ nu deploya nimic din wwwroot
            **/.git*
            **/.github/**
            **/*.pdb
            **/*.md
            **/*.map
            **/*.xml
            **/node_modules/**
            **/App_Data/dataSettings.json
            **/App_Data/plugins.json
            **/App_Data/appsettings.json
            **/appsettings.Production.json

      - name: Remove app_offline.htm (bring site online)
        shell: pwsh
        run: |
          $server = "${{ secrets.FTP_SERVER }}"
          $dir    = "${{ secrets.FTP_DIR }}".TrimEnd('/')
          $user   = "${{ secrets.FTP_USERNAME }}"
          $pass   = "${{ secrets.FTP_PASSWORD }}"
          $url = if ($dir -eq "." -or [string]::IsNullOrWhiteSpace($dir)) { "ftp://$server/app_offline.htm" } else { "ftp://$server/$dir/app_offline.htm" }
          $req = [System.Net.FtpWebRequest]::Create($url)
          $req.Method = [System.Net.WebRequestMethods+Ftp]::DeleteFile
          $req.Credentials = New-Object System.Net.NetworkCredential($user, $pass)
          try { $resp = $req.GetResponse(); $resp.Close() } catch { Write-Host "Warning: couldn't delete app_offline.htm ($_)" }
